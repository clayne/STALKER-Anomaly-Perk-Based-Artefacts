GUI = nil -- instance, don't touch
function start(af_obj)
	hide_hud_inventory()

	if (not GUI) then
		GUI = AfLightouseTeleportUI(af_obj)
	end

	if (GUI) and (not GUI:IsShown()) then
		GUI:ShowDialog(true)
		GUI:Reset(af_obj)
	end
end

-------------------------------------------------------------------
class "AfLightouseTeleportUI" (CUIScriptWnd)

function AfLightouseTeleportUI:__init(af_obj) super()
	self:Reset(af_obj)
end

function AfLightouseTeleportUI:__finalize()

end

function AfLightouseTeleportUI:Reset(af_obj)
	self.af_obj = af_obj
	self:Print(nil, "Choose the point to teleport")
end

function AfLightouseTeleportUI:Print(s, str, ...)
	actor_menu.set_msg(1, string.format(str, ...), 2)
end

function AfLightouseTeleportUI:Close()
	self.af_obj = nil
	self.worldPos = nil
	self.obj = nil

	self:HideDialog()
	self:Show(false)
end

function AfLightouseTeleportUI:TryTeleport()
	if not self.worldPos then return end
	if perk_based_artefacts.artefact_props.af_lighthouse:manual_teleport(self.worldPos, self.obj) then
		alife_release(self.af_obj)
		self:Close()
	else
		self:Print(nil, "Can't teleport, on cooldown")
	end
end

function AfLightouseTeleportUI:OnKeyboard(dik, keyboard_action)
	local res = CUIScriptWnd.OnKeyboard(self,dik,keyboard_action)
	if (res == false) then
		local bind = dik_to_bind(dik)
		if keyboard_action == ui_events.WINDOW_KEY_PRESSED then
			if dik == DIK_keys.MOUSE_1 then
				self:TryTeleport()
			elseif dik == DIK_keys.DIK_ESCAPE then
				self:Close()
			end
		end
	end
	return res
end

function AfLightouseTeleportUI:Update()
	CUIScriptWnd.Update(self)
	local pos = GetCursorPosition()
	local worldPos, worldObjId = game.ui2world(pos)
	local obj = level.object_by_id(worldObjId)
	local vol = level.get_bounding_volume()
	
	if worldPos.x < vol.min.x then worldPos.x = vol.min.x + 2 end
	if worldPos.y < vol.min.y then worldPos.y = vol.min.y + 2 end
	if worldPos.z < vol.min.z then worldPos.z = vol.min.z + 2 end
	if worldPos.x > vol.max.x then worldPos.x = vol.max.x - 2 end
	if worldPos.y > vol.max.y then worldPos.y = vol.max.y - 2 end
	if worldPos.z > vol.max.z then worldPos.z = vol.max.z - 2 end

	self.worldPos = worldPos
	self.obj = obj and (IsStalker(obj) or IsMonster(obj)) and obj

	local p = particles_object("amik\\hit_fx\\metal\\hit_sparks_glow")
	p:play_at_pos(vector():set(self.worldPos):mad(vector():set(self.worldPos):sub(device().cam_pos):normalize(), -0.5)) 
end
